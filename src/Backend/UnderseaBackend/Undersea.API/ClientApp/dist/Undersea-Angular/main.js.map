{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/services/signal-r.service.ts","./src/app/features/army/components/army.component.ts","./src/app/features/army/components/army.component.html","./src/app/features/attack/components/attack.component.ts","./src/app/features/attack/components/attack.component.html","./src/app/features/buildings/components/buildings.component.ts","./src/app/features/buildings/components/buildings.component.html","./src/app/features/developments/components/developments.component.ts","./src/app/features/developments/components/developments.component.html","./src/app/features/explorer/explorer.component.ts","./src/app/features/explorer/explorer.component.html","./src/app/features/fight/components/fight.component.ts","./src/app/features/fight/components/fight.component.html","./src/app/features/pages/auth/interceptor.ts","./src/app/features/pages/auth/service/auth-guard.service.ts","./src/app/features/pages/auth/service/authpage.service.ts","./src/app/features/pages/main/components/header/header.component.ts","./src/app/features/pages/main/components/header/header.component.html","./src/app/features/pages/main/components/main-page/main-page.component.ts","./src/app/features/pages/main/components/main-page/main-page.component.html","./src/app/features/pages/main/components/navbar/navbar.component.ts","./src/app/features/pages/main/components/navbar/navbar.component.html","./src/app/features/pages/main/components/profile-card/profile-card.component.ts","./src/app/features/pages/main/components/profile-card/profile-card.component.html","./src/app/features/pages/main/main.module.ts","./src/app/features/pages/main/main.routing.ts","./src/app/features/rank/components/rank.component.ts","./src/app/features/rank/components/rank.component.html","./src/app/features/service/feature.service.ts","./src/app/shared/index.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuardService as AuthGuard\r\n} from './features/pages/auth/service/auth-guard.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./features/pages/auth/auth.module').then(m => m.AuthModule)\r\n  },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n\r\n  {\r\n    path: 'main',\r\n    loadChildren: () => import('./features/pages/main/main.module').then(m => m.MainModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Undersea-Angular';\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { MainModule } from './features/pages/main/main.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { HttpHandler, HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtHelperService, JwtInterceptor, JWT_OPTIONS, JwtModule, } from '@auth0/angular-jwt';\r\nimport { TokenInterceptor } from './features/pages/auth/interceptor';\r\nimport { ArmyClient, CityClient, GameClient, UpgradeAttributeDto, UpgradeTypeClient, UpgradesClient, BuildingTypeClient } from './shared';\r\nimport { HeaderComponent } from './features/pages/main/components/header/header.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MainModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => {\r\n          return localStorage.getItem('access_token');\r\n        },\r\n        whitelistedDomains: ['localhost:4200']\r\n      }\r\n    })\r\n\r\n  ],\r\n  providers: [\r\n    HttpClient,\r\n    JwtHelperService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n    ArmyClient,\r\n    CityClient,\r\n    GameClient,\r\n    UpgradeTypeClient,\r\n    UpgradesClient,\r\n    BuildingTypeClient\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { environment } from 'src/environments/environment';\r\nimport { API_BASE_URL } from '../shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule\r\n\r\n  ],\r\n  exports: [\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    { provide: API_BASE_URL, useValue: environment.ApiBaseUrl }\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { Injectable, EventEmitter } from '@angular/core';\nimport * as SignalR from '@aspnet/signalr';\nimport { environment } from '../../../environments/environment';\nimport { url } from 'inspector';\nimport { SignalViewModel } from '../models/signal-view-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalRService {\n  private hubConnection: SignalR.HubConnection;\n  signalReceived = new EventEmitter<SignalViewModel>();\n\n  constructor() {\n    this.buildConnection();\n    this.startConnection();\n   }\n\n  public buildConnection = () => {\n    const signalUrl = environment.ApiBaseUrl + '/signalHub';\n    this.hubConnection = new SignalR.HubConnectionBuilder()\n      .withUrl(signalUrl)\n      .build();\n  }\n\n  public startConnection = () => {\n    this.hubConnection\n      .start()\n      .then(() => {\n        console.log('Connection Started...');\n        this.registerSignalEvents();\n      })\n      .catch(err => {\n        console.log('Error while starting connection' + err);\n      });\n  }\n\n  private registerSignalEvents() {\n    console.log('registered');\n    this.hubConnection.on('NextTurn', (data: SignalViewModel) => {\n      this.signalReceived.emit(data);\n    });\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ArmyModel, ArmyUnitModel } from '../model/army.model';\r\n\r\nimport { MAT_DIALOG_DATA, MatDialogRef, throwMatDialogContentAlreadyAttachedError } from '@angular/material/dialog';\r\nimport { FeatureService } from '../../service/feature.service';\r\nimport { UnitList } from '../../pages/main/model/profile.model';\r\n\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { ArmyUnitDto, UnitType } from 'src/app/shared';\r\n\r\n\r\n@Component({\r\n  selector: 'app-army',\r\n  templateUrl: './army.component.html',\r\n  styleUrls: ['./army.component.scss']\r\n})\r\nexport class ArmyComponent implements OnInit {\r\n  public army: ArmyModel[];\r\n  public addUnit: ArmyUnitModel[];\r\n  gyongy = 'Gyöngy';\r\n\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private featureService: FeatureService,\r\n    public dialogRef: MatDialogRef<ArmyComponent>,\r\n    private snackbar: MatSnackBar\r\n  ) {\r\n    this.addUnit = data.units.map((x): ArmyUnitModel => ({ ...x }));\r\n    this.addUnit.forEach(unit => unit.unitCount = 0);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.featureService.getArmy().subscribe(res => this.army = res,\r\n      (err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    console.log('ARMY', this.army);\r\n  }\r\n\r\n  plusUnit(unit: number) {\r\n    this.addUnit[unit].unitCount++;\r\n  }\r\n\r\n  minusUnit(unit: number) {\r\n    if (this.addUnit[unit].unitCount > 0) {\r\n      this.addUnit[unit].unitCount--;\r\n    }\r\n  }\r\n\r\n  sendData() {\r\n    if (!this.addUnit.some(x => x.unitCount !== 0)) {\r\n      this.snackbar.open('Válaszd ki mit szeretnél vásárolni!', 'Bezár', {\r\n        duration: 3000\r\n      });\r\n    } else {\r\n      this.featureService.purchaseUnits(this.addUnit).subscribe(() => {\r\n        this.dialogRef.close();\r\n        this.snackbar.open('Sikeres vásárlás!', 'Bezár', {\r\n          duration: 3000\r\n        });\r\n      }, (err) => {\r\n       console.log('Error:', JSON.stringify(err));\r\n       console.log('Error:', JSON.parse(err.response).Message);\r\n       this.snackbar.open(JSON.parse(err.response).Message, 'Bezár', {\r\n          duration: 5000\r\n         });\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"flex \">\r\n    <h2 style=\"margin-top: 0.5vh; margin-bottom: 0.5vh;\">\r\n        Sereg\r\n    </h2>\r\n    <p style=\"font-family: open-sans-bold; margin: 0; font-size: 16px\">\r\n        Kattints rá, amelyiket szeretnéd megvenni.\r\n    </p>\r\n    <div class=\"main-content\">\r\n        <div *ngFor=\"let unit of army; let i = index\" class=\"content\">\r\n            <div class=\"content\">\r\n                <mat-card class=\"img-card\">\r\n                    <img src='../../../../assets/images/{{unit.unitType}}.svg' style=\"width: 3vw;\">\r\n                </mat-card>\r\n                <div class=\"unit-name\">\r\n                    {{unit.name}}\r\n                </div>\r\n                <div class=\"unit-content\">\r\n                    <div class=\"descriptions\">\r\n                        <div>Birtokodban:</div>\r\n                        <div>Támadás/Védekezés</div>\r\n                        <div>Zsold (/kör/példány</div>\r\n                        <div>Ellátmány</div>\r\n                        <div>Ár</div>\r\n                    </div>\r\n                    <div class=\"values\">\r\n\r\n                        <div class=\"quantity\">\r\n                            {{data.units[i].unitCount}} db\r\n                        </div>\r\n                        <div class=\"attack/def\">\r\n                            {{unit.damage}}/{{unit.defense}}\r\n                        </div>\r\n                        <div class=\"pay\">\r\n                            {{unit.foodNecessity}} {{ gyongy }}\r\n                        </div>\r\n                        <div class=\"food\">\r\n                            {{unit.foodNecessity}} Korall\r\n                        </div>\r\n                        <div class=\"price\">\r\n                            {{unit.price}} {{ gyongy }}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"plus-minus\">\r\n\r\n                <div class=\"plus-icon\" (click)=\"minusUnit(i)\">\r\n                    -\r\n                </div>\r\n                <div>\r\n                    {{this.addUnit[unit.unitType].unitCount}}\r\n                </div>\r\n                <div class=\"plus-icon\" (click)=\"plusUnit(i)\">\r\n                    +\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <mat-divider style=\"margin-top: 8vh;\"></mat-divider>\r\n    <div class=\"buttons-div\">\r\n        <button mat-button class=\"army-button\" id=\"armyButton\" (click)=\"sendData()\">Megveszem</button>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, ElementRef, ViewChild, Inject } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FeatureService } from '../../service/feature.service';\r\nimport { AttackModel } from '../model/attack.model';\r\nimport { MatSliderChange, MatSlider } from '@angular/material/slider';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ArmyUnitDto } from 'src/app/shared';\r\nimport { ArmyUnitModel } from '../../army/model/army.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-attack',\r\n  templateUrl: './attack.component.html',\r\n  styleUrls: ['./attack.component.scss']\r\n})\r\nexport class AttackComponent implements OnInit {\r\n  displayedColumns: string[] = ['target', 'choice'];\r\n  userList: AttackModel[];\r\n  selected: boolean;\r\n  selectedUserId: string;\r\n  army: ArmyUnitModel[];\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private el: ElementRef,\r\n    private snackbar: MatSnackBar,\r\n    private service: FeatureService,\r\n    public dialogRef: MatDialogRef<AttackComponent>,\r\n    private featureService: FeatureService\r\n  ) {\r\n    this.army = data.units.map((x): ArmyUnitDto => ({ ...x }));\r\n    this.army.forEach(unit => unit.unitCount = 0);\r\n  }\r\n\r\n  @ViewChild('matslider') slider: MatSlider;\r\n  @ViewChild('matslider2') slider2: MatSlider;\r\n  @ViewChild('matslider3') slider3: MatSlider;\r\n  @ViewChild('matslider4') slider4: MatSlider;\r\n  ngOnInit() {\r\n\r\n    this.service.getAttack().subscribe(res => {\r\n      this.userList = res;\r\n    });\r\n    this.selected = false;\r\n    console.log(this.data);\r\n\r\n    // we added this so that when the backdrop is clicked the modal is closed.\r\n    //  this.userList =  ['user1', 'user2', 'user3', 'user4', 'user5', 'user6', 'user7', 'user8', 'user9', 'user10'];\r\n  }\r\n\r\n  onSelect(row) {\r\n    console.log('ROW', row);\r\n    this.selected = true;\r\n    this.selectedUserId = row.id;\r\n    console.log(row.id);\r\n  }\r\n\r\n  sendData() {\r\n    if (this.selected) {\r\n\r\n      this.army[0].unitCount = this.slider.value;\r\n      this.army[1].unitCount = this.slider2.value;\r\n      this.army[2].unitCount = this.slider3.value;\r\n      this.army[3].unitCount = this.slider4.value;\r\n      console.log(this.army, this.selectedUserId);\r\n      this.featureService.sendAttack(this.selectedUserId, this.army).subscribe(() => {\r\n        this.dialogRef.close();\r\n        this.snackbar.open('Sikeres támadás!', 'Bezár', {\r\n          duration: 3000\r\n        });\r\n      });\r\n    } else if (this.selected === false) {\r\n      this.snackbar.open('Válaszd ki kit szeretnél támadni!', 'Bezár', {\r\n        duration: 3000\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","<h1>Támadás</h1>\r\n<div class=\"container\">\r\n\r\n    <div class=\"tables\">\r\n        <div class=\"infos\">\r\n            <span>1. Jelöld ki, kit szeretnél megtámadni!</span>\r\n            <table mat-table [dataSource]=\"userList\" class=\"left-table\">\r\n                <ng-container matColumnDef=\"target\">\r\n                    <th mat-header-cell *matHeaderCellDef><input class=\"search\" type=\"text\"\r\n                            placeholder=\"Felhasználónév\"></th>\r\n                    <td mat-cell *matCellDef=\"let element\" style=\"width: 8vw;\"> {{element.username}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"choice\">\r\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 4vw;\"></th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div *ngIf=\"selected\">\r\n                            <span class=\"checkmark\" >\r\n                                <div class=\"checkmark-circle\"></div>\r\n                                <div class=\"checkmark-stem\"></div>\r\n                                <div class=\"checkmark-kick\"></div>\r\n                            </span>\r\n                        </div>  \r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onSelect(row)\"\r\n                    [ngClass]=\"{'onSelect': selectedUserId == row.id}\"></tr>\r\n            </table>\r\n        </div>\r\n        <div class=\"infos-2\">\r\n            <table>\r\n                <tr>\r\n                    <th>2. Állítsd be, kiket küldessz harcba!</th>\r\n                </tr>\r\n                <tr>\r\n                    <td><img src='assets/images/Lézercápa.svg'>Lézercápa:  <span style=\"width: 10px;\">{{matslider?.value}}</span>  példány   <br>\r\n                         <mat-slider class=\"matslider\" #matslider class=\"slider\" min=\"0\" max=\"{{data.units[0].unitCount}}\" step=\"1\" value=\"0\"></mat-slider></td>\r\n                </tr>\r\n                <tr>\r\n                    <td><img src='assets/images/Rohamfóka.svg'>Rohamfóka: <span style=\"width: 10px;\">{{matslider2?.value}}</span> példány <br>\r\n                        <mat-slider #matslider2 class=\"slider\" min=\"0\" max= \"{{data.units[1].unitCount}}\" step=\"1\" value=\"0\"></mat-slider>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><img src='assets/images/Csatacsikó.svg'>Csatacsikó: <span style=\"width: 10px;\">{{matslider3?.value}}</span> példány\r\n                        <br>\r\n                        <mat-slider #matslider3 class=\"slider\" min=\"0\" max=\"{{data.units[2].unitCount}}\" step=\"1\" value=\"0\"></mat-slider>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><img src='assets/images/Csatacsikó.svg'>Hadvezér: <span style=\"width: 10px;\">{{matslider4?.value}}</span> példány\r\n                        <br>\r\n                        <mat-slider #matslider4 class=\"slider\" min=\"0\" max=\"{{data.units[3].unitCount}}\" step=\"1\" value=\"0\"></mat-slider>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<button mat-button style=\"color: #03255F ;\" (click)=\"sendData()\">Megtámadom!</button>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BuildingModel, BuildingAttributeModel } from '../model/building.model';\r\nimport { FeatureService } from '../../service/feature.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BuildingDto, BuildingAttributeDto } from 'src/app/shared';\r\n\r\n@Component({\r\n  selector: 'app-buildings',\r\n  templateUrl: './buildings.component.html',\r\n  styleUrls: ['./buildings.component.scss']\r\n})\r\nexport class BuildingsComponent implements OnInit {\r\n  public buildings: BuildingAttributeModel[];\r\n  public selectedBuilding: BuildingModel;\r\n  public addBuilding: BuildingModel[];\r\n  public id: string;\r\n  public canBuild: boolean;\r\n\r\n\r\n  constructor(\r\n    private featureService: FeatureService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<BuildingsComponent>,\r\n    private snackbar: MatSnackBar\r\n  ) {\r\n    console.log('BuildingData:', data);\r\n    this.addBuilding = data.building.map((x): BuildingModel => ({ ...x }));\r\n    console.log(this.addBuilding);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.canBuild = true;\r\n    this.buildings = [];\r\n    this.featureService.getBuildingTypes().subscribe(res => this.buildings = res,\r\n      (err) => {\r\n        this.snackbar.open(err.message, 'Bezár', {\r\n          duration: 5000\r\n        });\r\n      });\r\n  }\r\n\r\n  selected(building: BuildingDto) {\r\n    this.selectedBuilding = building;\r\n  }\r\n\r\n  unselect() {\r\n    this.selectedBuilding = null;\r\n  }\r\n\r\n  sendData() {\r\n    this.addBuilding.forEach(element => {\r\n      if (element.status === 1) {\r\n        this.canBuild = false;\r\n        this.snackbar.open('Egyszerre csak 1 épületet építhetsz!', 'Bezár', {\r\n          duration: 3000\r\n        });\r\n      }\r\n    });\r\n    if (this.canBuild) {\r\n      this.featureService.purchaseBuildings(this.selectedBuilding.buildingType).subscribe(() => {\r\n        this.dialogRef.close();\r\n        this.snackbar.open('Sikeres vásárlás!', 'Bezár', {\r\n          duration: 3000\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"flex\" (click)=\"unselect()\">\r\n  <h2 >\r\n    Épületek\r\n  </h2>\r\n  <p style=\"font-weight: bold; margin: 0\">\r\n    Kattints rá, amelyiket szeretnéd megvenni.\r\n  </p>\r\n  <p style=\"margin: 0;\">\r\n    Egyszerre csak egy épület épülhet!\r\n  </p>\r\n  <div class=\"main-content\">\r\n    <div *ngFor=\"let building of buildings; let i = index\" (click)=\"$event.stopPropagation(); selected(building)\" class=\"content\" tabindex=\"-1\">\r\n      <img src='../../../../assets/images/building_{{building.buildingType + 1}}.png'>\r\n      <div class=\"building-name\">\r\n        {{building.name}}\r\n      </div>\r\n      <div class=\"building-desc\">\r\n        <div *ngIf=\"building.resident != 0\" class=\"building-data\">\r\n          {{building.resident}} embert ad a népességhez\r\n        </div>\r\n        <div *ngIf=\"building.coral != 0\" class=\"building-data\">\r\n          {{building.coral}} korallt termel körönként\r\n        </div>\r\n        <div *ngIf=\"building.hostCapacity != 0\" class=\"building-data\">\r\n          {{building.hostCapacity}} egységnek nyújt szállást\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"quantity\">\r\n        {{data.building[i].quantity}} db\r\n      </div>\r\n      <div class=\"price\">\r\n        {{building.price}} Gyöngy / db\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-divider></mat-divider>\r\n  <div class=\"buttons-div\">\r\n    <button [disabled]=\"!selectedBuilding\" mat-button class=\"building-button\" (click)=\"sendData()\" id=\"build-button\">Megveszem</button>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { UpgradeAttributeModel, UpgradeModel } from '../../developments/model/development.model';\r\nimport { FeatureService } from '../../service/feature.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UpgradeAttributeDto, UpgradeDto, Status } from 'src/app/shared';\r\nimport { elementAt } from 'rxjs/operators';\r\n\r\ninterface Development {\r\n  type: any;\r\n  currentTurn: any;\r\n  status: any;\r\n}\r\n@Component({\r\n  selector: 'app-developments',\r\n  templateUrl: './developments.component.html',\r\n  styleUrls: ['./developments.component.scss']\r\n})\r\n\r\n\r\nexport class DevelopmentsComponent implements OnInit {\r\n  public upgrades: UpgradeAttributeModel[];\r\n  public selectedDevelopment: number;\r\n  public id: string;\r\n  public status: UpgradeModel[];\r\n  upgraded: boolean;\r\n  array;\r\n  canPurchase: boolean;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: number[],\r\n    private featureService: FeatureService,\r\n    public dialogRef: MatDialogRef<DevelopmentsComponent>,\r\n    private snackbar: MatSnackBar,\r\n\r\n  ) {\r\n    // console.log(this.bought);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.upgrades = [];\r\n    this.array = [];\r\n    this.status = [];\r\n    this.canPurchase = true;\r\n    this.featureService.getDevelopments().subscribe(res => {\r\n      this.upgrades = res.map((x): UpgradeAttributeModel => ({ ...x }));\r\n    });\r\n    this.featureService.getUpgradesinfos().subscribe(res => {\r\n\r\n      res.forEach(element => this.status.push(element));\r\n      console.log(res);\r\n\r\n      res.forEach(element => {\r\n        const response: Development = {\r\n          type: element.upgradeType,\r\n          currentTurn: element.currentTurn,\r\n          status: element.status\r\n        };\r\n        this.array.push(response);\r\n      });\r\n      console.log(this.array);\r\n    });\r\n  }\r\n\r\n  selected(upgrade: UpgradeAttributeDto) {\r\n    this.selectedDevelopment = upgrade.upgradeType;\r\n    console.log(upgrade);\r\n  }\r\n\r\n\r\n  sendData() {\r\n    console.log(this.array);\r\n    if (this.array[this.selectedDevelopment].status === 1 || this.array[this.selectedDevelopment].status === 2) {\r\n      this.snackbar.open('Ezt a fejlesztést már megvásároltad!', 'Bezár', {\r\n        duration: 3000\r\n      });\r\n    }\r\n    else {\r\n      this.array.forEach(element => {\r\n        if (element.status === 1) {\r\n          this.canPurchase = false;\r\n          this.snackbar.open('Egyszerre csak 1 fejlesztést fejleszthetsz!', 'Bezár', {\r\n            duration: 3000\r\n          });\r\n        }\r\n      });\r\n      if (this.canPurchase) {\r\n        this.featureService.startUpgrades(this.selectedDevelopment).subscribe();\r\n        this.dialogRef.close();\r\n        this.snackbar.open('Sikeres vásárlás!', 'Bezár', {\r\n          duration: 3000\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"flex \">\r\n    <h2>\r\n      Fejlesztések\r\n    </h2>\r\n    <div class=\"guide\">\r\n      Kattints rá, amelyiket szeretnéd megvenni.\r\n    </div>\r\n    <div class=\"info\">\r\n        Minden fejlesztés 15 kört vesz igénybe, egyszerre csak egy dolog fejleszthető és minden csak egyszer fejleszthető ki (nem lehet két kombájn).\r\n    </div>\r\n    <div class=\"main-content\">\r\n      <div  *ngFor=\"let upgrade of upgrades\" (click)=\"selected(upgrade)\" class=\"content\" tabindex=\"-1\">\r\n\r\n          <div *ngIf=\"array[upgrade.upgradeType].status === 2\">\r\n            <div class=\"checkmark\">\r\n              <div class=\"checkmark-circle\"></div>\r\n              <div class=\"checkmark-stem\"></div>\r\n              <div class=\"checkmark-kick\"></div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"array[upgrade.upgradeType].status === 1\">\r\n          <div class=\"round\">\r\n            még {{15 - array[upgrade.upgradeType].currentTurn}} kör\r\n          </div>\r\n      </div>\r\n        <div class=\"images\">\r\n          <img src='../../../../assets/images/development_{{upgrade.upgradeType + 1}}.png' style=\"height: 5vw\">\r\n        </div>\r\n        <div class=\"development-name\">\r\n          {{upgrade.name}}\r\n        </div>\r\n        <div *ngIf=\"upgrade.coralProduction !== 0\" class=\"development-desc\">\r\n          növeli a Korall termesztést  {{upgrade.coralProduction}}%-al \r\n        </div>\r\n        <div *ngIf=\"(upgrade.attackPoints !== 0 && !upgrade.defensePoints)\" class=\"development-desc\">\r\n          növeli a támadópontokat {{upgrade.attackPoints}}%-al\r\n        </div>\r\n        <div *ngIf=\"(!upgrade.attackPoints && upgrade.defensePoints !== 0)\" class=\"development-desc\">\r\n          növeli a védelmi pontokat {{upgrade.defensePoints}}%-al\r\n        </div>\r\n        <div *ngIf=\"(upgrade.attackPoints !== 0 && upgrade.defensePoints !== 0)\" class=\"development-desc\">\r\n          növeli a támadó és védelmi pontokat {{upgrade.attackPoints}}%-al\r\n        </div>\r\n        <div *ngIf=\"upgrade.taxIncrease !== 0\" class=\"development-desc\">\r\n          növeli a beszedett adót {{upgrade.taxIncrease}}%-al\r\n        </div>\r\n      </div>\r\n    </div>\r\n  <mat-divider class=\"divider\"></mat-divider>\r\n  <div class=\"buttons-div\">\r\n    <button mat-button class=\"development-button\" id=\"developmentButton\" (click)=\"sendData()\">Megveszem</button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FeatureService } from '../service/feature.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-explorer',\r\n  templateUrl: './explorer.component.html',\r\n  styleUrls: ['./explorer.component.scss']\r\n})\r\nexport class ExplorerComponent implements OnInit {\r\n\r\n  constructor(private service: FeatureService) { }\r\n\r\n  displayedColumns: string[] = [ 'name', 'feature'];\r\n  dataSource;\r\n  explorerList: any;\r\n\r\n  ngOnInit(): void {\r\n    this.service.getArmy().subscribe(res => {\r\n      console.log(res);\r\n    })\r\n\r\n    this.dataSource = new MatTableDataSource(this.explorerList);\r\n  }\r\n\r\n}\r\n","<h1>Felderítő</h1>\r\n<div class=\"infos\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"left-table\" class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"name\" >\r\n            <th mat-header-cell *matHeaderCellDef ></th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"feature\">\r\n            <th  mat-header-cell *matHeaderCellDef mat-sort-header ></th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.feature}} </td>\r\n          </ng-container>\r\n      \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" style=\"height: 2vh;\"></tr>\r\n\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" ></tr>\r\n    </table>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AttackResponseModel } from '../model/fight.model';\r\nimport { FeatureService } from '../../service/feature.service';\r\nimport { AttackResponseDto } from 'src/app/shared';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-fight',\r\n  templateUrl: './fight.component.html',\r\n  styleUrls: ['./fight.component.scss']\r\n})\r\nexport class FightComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['city', 'sharks', 'seals', 'seahorses', 'general'];\r\n  dataSource: AttackResponseModel[];\r\n\r\n\r\n  constructor(private featureService: FeatureService,  private snackbar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.featureService.getFights().subscribe(res => {\r\n      this.dataSource = res.map((x): AttackResponseModel => ({...x}));\r\n    },\r\n      (err) => {\r\n        this.snackbar.open(err.message, 'Bezár', {\r\n          duration: 3000\r\n        });\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"flex\">\r\n    <p class=\"fightTitle\">Harc</p>\r\n\r\n   \r\n\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"fightTable\" >\r\n       \r\n        <ng-container matColumnDef=\"city\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 15vw;\"> {{element.cityName}} </td>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"sharks\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.unitList.unitList[0].unitCount}} Lézercápa </td>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"seals\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.unitList.unitList[1].unitCount}} Rohamfóka </td>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"seahorses\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.unitList.unitList[2].unitCount}} Csatacsikó</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"general\">\r\n            <th mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.unitList.unitList[3].unitCount}} Hadvezér</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" style=\"height: 2vh;\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { AuthpageService } from './service/authpage.service';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    constructor(public auth: AuthpageService) { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token = localStorage.getItem('token');\r\n        if (token != null) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${this.auth.getToken()}`\r\n                }\r\n            });\r\n        }\r\n        console.log('intercepted ');\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthpageService } from './authpage.service';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthpageService, public router: Router) { }\r\n  canActivate(): boolean {\r\n     if (!this.auth.isAuthenticated()) {\r\n        this.router.navigate(['login']);\r\n        return false;\r\n      }\r\n     return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, from } from 'rxjs';\r\nimport { LoginDto, AuthClient, FileResponse, RegisterDto, AuthResponseDto } from 'src/app/shared';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AuthPageComponent } from '../components/auth-page/auth-page.component';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthpageService {\r\n\r\n\r\n  // tslint:disable:new-parens\r\n  logind = new LoginDto;\r\n  registerd = new RegisterDto;\r\n  public jwtHelper;\r\n  router: any;\r\n  newUser: boolean;\r\n\r\n  constructor(private authClient: AuthClient) {\r\n    this.jwtHelper = new JwtHelperService();\r\n  }\r\n\r\n  login(name: string, pwd: string): Observable<AuthResponseDto> {\r\n    this.logind.username = name;\r\n    this.logind.password = pwd;\r\n    this.newUser = false;\r\n    return from(this.authClient.authenticateUser(this.logind));\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  register(name: string, pwd: string, pwd2: string, cityName: string): Observable<AuthResponseDto> {\r\n\r\n    this.registerd.username = name;\r\n    this.registerd.password = pwd;\r\n    this.registerd.city = cityName;\r\n    this.newUser = true;\r\n\r\n    return from(this.authClient.registerUser(this.registerd));\r\n\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    const token = localStorage.getItem('token');\r\n    // Check whether the token is expired and return\r\n    // true or false\r\n    if (token === null) {\r\n      return null;\r\n    }\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ProfileModel } from '../../model/profile.model';\r\nimport { FeatureService } from 'src/app/features/service/feature.service';\r\nimport { CityDto } from 'src/app/shared';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { SignalRService } from 'src/app/core/services/signal-r.service';\r\nimport { SignalViewModel } from 'src/app/core/models/signal-view-model';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() city: CityDto;\r\n  @Input() rank: number;\r\n  currentTurn: number;\r\n  @Output() reload = new EventEmitter<void>();\r\n\r\n  constructor(private featureService: FeatureService, private signalRService: SignalRService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('header city: ', this.city);\r\n    this.featureService.getTurn().subscribe(res => this.currentTurn = res);\r\n    this.signalRService.signalReceived.subscribe((signal: SignalViewModel) => {\r\n      this.featureService.getTurn().subscribe(res => this.currentTurn = res);\r\n      this.reload.emit();\r\n      console.log('halo halo');\r\n\r\n    });\r\n  }\r\n\r\n  endTurn() {\r\n    this.featureService.endTurn().pipe(\r\n      switchMap(() => this.featureService.getTurn()),\r\n    ).subscribe(res => {\r\n      this.reload.emit();\r\n      this.currentTurn = res;\r\n    });\r\n\r\n  //   this.featureService.endTurn().subscribe(() => {\r\n  //     this.getTurnCount();\r\n  //     this.featureService.getProfile().subscribe(res => {\r\n  //       this.city = res;\r\n  //       console.log('SZITI', this.city);\r\n  //     },\r\n  //       err => {\r\n  //         console.error(err);\r\n  //       });\r\n  //   }, (err) => console.error(err));\r\n  }\r\n}\r\n","<div class=\"flex\">\r\n  <div class=\"navbar\">\r\n    <a class=\"infos\">\r\n      <span>{{currentTurn}}.kör</span>\r\n      <span>{{rank}}.hely</span>\r\n      <button mat-button (click)=\"endTurn()\">Kör vége</button>\r\n    </a>\r\n\r\n    <ul class=\"nav-links\">\r\n      <li class=\"nav-item\">\r\n        <span>\r\n          <div class=\"img-div\">\r\n            <img src=\"assets/images/Lézercápa.svg\" alt=\"image\">\r\n          </div>\r\n          <div class=\"data\">{{city.availableArmy.unitList[0].unitCount}}</div>\r\n        </span>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <span>\r\n          <div class=\"img-div\">\r\n            <img src=\"assets/images/Rohamfóka.svg\" alt=\"image\">\r\n          </div>\r\n          <div class=\"data\">{{city.availableArmy.unitList[1].unitCount}}</div>\r\n        </span>\r\n      </li>\r\n      <li class=\"nav-item\"> <span>\r\n          <div class=\"img-div\">\r\n            <img src=\"assets/images/Csatacsikó.svg\" alt=\"image\">\r\n          </div>\r\n          <div class=\"data\">{{city.availableArmy.unitList[2].unitCount}}</div>\r\n        </span>\r\n      </li>\r\n      <li class=\"nav-item\"> <span>\r\n          <div class=\"img-div\">\r\n            <img src=\"assets/images/shell.svg\" alt=\"image\">\r\n          </div>\r\n          <div class=\"data\">\r\n            <div>{{city.pearlCount}}</div>\r\n            <div class=\"second-data\">{{city.pearlProduction}}/kör</div>\r\n          </div>\r\n        </span>\r\n      </li>\r\n      <li class=\"nav-item\"> <span>\r\n          <div class=\"img-div\">\r\n            <img src=\"assets/images/018-coral.svg\" alt=\"image\">\r\n          </div>\r\n          <div class=\"data\">\r\n            <div>{{city.coralCount}}</div>\r\n            <div class=\"second-data\">{{city.coralProduction}}/kör</div>\r\n          </div>\r\n        </span>\r\n      </li>\r\n      <li class=\"nav-item\"> <span>\r\n\r\n          <img src=\"assets/images/Zátonyvár.png\" alt=\"\" class=\"building-img\">\r\n\r\n          <div class=\"data\">\r\n            <div>{{city.buildings[0].quantity}}</div>\r\n            <div class=\"second-data\">{{city.buildings[0].status}} épül</div>\r\n          </div>\r\n        </span>\r\n      </li>\r\n      <li class=\"nav-item\"> <span>\r\n\r\n          <img src=\"assets/images/Áramlásirányító.png\" alt=\"\" class=\"building-img\">\r\n\r\n          <div class=\"data\">\r\n            <div>{{city.buildings[1].quantity}}</div>\r\n            <div class=\"second-data\">{{city.buildings[1].status}} épül</div>\r\n          </div>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthClient, ProfileClient, CityDto, RankDto } from 'src/app/shared';\r\nimport { ProfileModel } from '../../model/profile.model';\r\nimport { FeatureService } from 'src/app/features/service/feature.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.scss']\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n  city: CityDto;\r\n  profile: RankDto;\r\n  array: [];\r\n  constructor(private featureService: FeatureService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.array = [];\r\n    this.reload();\r\n\r\n  }\r\n\r\n  reload() {\r\n    this.featureService.getCity().subscribe(res => {\r\n      this.city = res;\r\n\r\n    },\r\n      err => {\r\n        console.error(err);\r\n      });\r\n    this.featureService.getProfile().subscribe(res => {\r\n      this.profile = res;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"bg\">\r\n    <app-header *ngIf=\"city\" [city]=\"city\" [rank]=\"profile.rank\" (reload)=\"reload()\"></app-header>\r\n<div *ngIf=\"city\" class=\"flex\">\r\n    <div class=\"left-side\">\r\n        <div class=\"components\">\r\n            <app-navbar *ngIf=\"city\" [buildings]=\"city.buildings\" [developements]=\"\" [units]=\"city.availableArmy.unitList\"\r\n                (reload)=\"reload()\"></app-navbar>\r\n            <app-profile-card *ngIf=\"city\" [name]=\"profile.username\"></app-profile-card>\r\n        </div>\r\n        <!-- <div class=\"wave\" style=\"--w:40px;--h:10px;--p:4px; --t:3px;--c:#9FFFF0\"></div> -->\r\n        <div class=\"title\">\r\n            UNDERSEA\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"main-content\">\r\n        <div *ngIf=\"city.buildings[0].quantity != 0\" class=\"zatony-div\">\r\n            <img src=\"../../../../../../assets/images/Zátonyvár_pic.png\" alt=\"\" class=\"zatony\">\r\n        </div>\r\n        <div *ngIf=\"city.buildings[1].quantity != 0\" class=\"aramlas-div\">\r\n            <img src=\"../../../../../../assets/images/Áramlásirányító_pic.png\" alt=\"\" class=\"aramlas\">\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { BuildingsComponent } from '../../../../buildings/components/buildings.component';\r\nimport { AttackComponent } from '../../../../attack/components/attack.component';\r\nimport { FightComponent } from '../../../../fight/components/fight.component';\r\nimport { RankComponent } from '../../../../rank/components/rank.component';\r\nimport { ArmyComponent } from '../../../../army/components/army.component';\r\nimport { DevelopmentsComponent } from 'src/app/features/developments/components/developments.component';\r\nimport { HeaderComponent } from '../header/header.component';\r\nimport { UnitList } from '../../model/profile.model';\r\nimport { UnitDto, ArmyUnitDto, UnitType, BuildingDto } from 'src/app/shared';\r\nimport { ExplorerComponent } from '../../../../explorer/explorer.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @Input() buildings: BuildingDto[];\r\n  @Input() developements: number[];\r\n  @Input() units: ArmyUnitDto[];\r\n  @Output() reload = new EventEmitter<void>();\r\n\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openBuildings() {\r\n    const dialogRef = this.dialog.open(BuildingsComponent, {\r\n      width: '50vw',\r\n      data: {\r\n        building: this.buildings\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => this.reload.emit());\r\n  }\r\n\r\n  openAttack() {\r\n    const dialogRef = this.dialog.open(AttackComponent, {\r\n      width: '50vw',\r\n      data: {\r\n        // tslint:disable-next-line:max-line-length\r\n        units: this.units,\r\n      },\r\n      backdropClass: 'backdropBackground'\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => this.reload.emit());\r\n  }\r\n\r\n  openFights() {\r\n    const dialogRef = this.dialog.open(FightComponent, {\r\n      width: '50vw',\r\n      data: {\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => this.reload.emit());\r\n  }\r\n\r\n  openRanks() {\r\n    const dialogRef = this.dialog.open(RankComponent, {\r\n      width: '50vw',\r\n      data: {}\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => this.reload.emit());\r\n  }\r\n\r\n  openArmy() {\r\n    const dialogRef = this.dialog.open(ArmyComponent, {\r\n      width: '50vw',\r\n      data: {\r\n        // tslint:disable-next-line:max-line-length\r\n        units: this.units,\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(() => this.reload.emit());\r\n  }\r\n\r\n  openDevelopments() {\r\n    const dialogRef = this.dialog.open(DevelopmentsComponent, {\r\n      width: '50vw',\r\n      data: {\r\n        developements: this.developements\r\n      }\r\n    });\r\n  }\r\n  openExplorer() {\r\n    const dialogRef = this.dialog.open(ExplorerComponent, {\r\n      width: '50vw',\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"buttons\">\r\n    <button mat-button (click)=\"openBuildings()\" >Épületek</button>\r\n    <button mat-button (click)=\"openDevelopments()\" >Fejlesztések</button>\r\n    <button mat-button (click)=\"openAttack()\">Támadás</button>\r\n    <button mat-button (click)=\"openFights()\">Harc</button>\r\n    <button mat-button (click)=\"openRanks()\">Ranglista</button>\r\n    <button mat-button (click)=\"openArmy()\">Sereg</button>\r\n    <button mat-button (click)=\"openExplorer()\">Felderítő</button>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AuthpageService } from '../../../auth/service/authpage.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile-card',\r\n  templateUrl: './profile-card.component.html',\r\n  styleUrls: ['./profile-card.component.scss']\r\n})\r\nexport class ProfileCardComponent implements OnInit {\r\n  @Input() name: string;\r\n\r\n  constructor(private authPageService: AuthpageService, private router: Router) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout() {\r\n    localStorage.setItem('token', null);\r\n    this.router.navigate(['login']);\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <span><img src='assets/images/002-male.svg' alt = \"profile picture\"></span>\r\n    <span class=\"name\">{{name}}</span>\r\n    <span>Profil</span>\r\n    <span (click)=\"logout()\" style=\"cursor: pointer;\">Kijelentkezés</span>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainRoutingModule } from './main.routing';\r\nimport { MainPageComponent } from './components/main-page/main-page.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ProfileCardComponent } from './components/profile-card/profile-card.component';\r\nimport { BuildingsComponent } from '../../buildings/components/buildings.component';\r\nimport { AttackComponent } from '../../attack/components/attack.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FightComponent } from '../../fight/components/fight.component';\r\nimport { ArmyComponent } from '../../army/components/army.component';\r\nimport { RankComponent } from '../../rank/components/rank.component';\r\nimport { DevelopmentsComponent } from '../../developments/components/developments.component';\r\nimport { ExplorerComponent } from '../../explorer/explorer.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainPageComponent,\r\n    HeaderComponent,\r\n    NavbarComponent,\r\n    ProfileCardComponent,\r\n    BuildingsComponent,\r\n    AttackComponent,\r\n    FightComponent,\r\n    ArmyComponent,\r\n    RankComponent,\r\n    DevelopmentsComponent,\r\n    ExplorerComponent\r\n  ],\r\n  // tslint:disable-next-line:max-line-length\r\n  exports: [MainPageComponent, HeaderComponent, NavbarComponent, ProfileCardComponent, AttackComponent, FightComponent, ArmyComponent, RankComponent, DevelopmentsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MainRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class MainModule { }\r\n","import { MainPageComponent } from './components/main-page/main-page.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {\r\n  AuthGuardService as AuthGuard\r\n} from '../auth/service/auth-guard.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MainPageComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MainRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FeatureService } from '../../service/feature.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { RankDto } from 'src/app/shared';\r\nimport { RankModel } from '../model/rank.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-rank',\r\n  templateUrl: './rank.component.html',\r\n  styleUrls: ['./rank.component.scss']\r\n})\r\nexport class RankComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n\r\n  constructor(private service: FeatureService) { }\r\n\r\n  displayedColumns: string[] = ['place', 'name', 'points'];\r\n  rankList: RankModel[];\r\n  dataSource;\r\n  selectedRowIndex: any;\r\n  selected;\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.service.getRanks().subscribe(res => {\r\n      console.log(res);\r\n      this.rankList = res.map((x): RankModel => ({...x}));\r\n      this.dataSource = new MatTableDataSource(this.rankList);\r\n      this.dataSource.sort = this.sort;\r\n      this.selected = false;\r\n\r\n    });\r\n  }\r\n\r\n  onSelect(row) {\r\n\r\n    this.selectedRowIndex = row.id;\r\n    this.selected = true;\r\n\r\n  }\r\n}\r\n","<div>\r\n  <h1>Ranglista</h1>\r\n<input class=\"search\" type=\"text\" placeholder=\"Felhasználónév\">\r\n\r\n\r\n<div class=\"infos\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"left-table\" matSort class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"place\">\r\n          <th mat-header-cell *matHeaderCellDef></th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\" style=\"width: 2vw;\"> {{i + 1}}.</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"name\" >\r\n            <th mat-header-cell *matHeaderCellDef ></th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.username}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"points\">\r\n            <th  mat-header-cell *matHeaderCellDef></th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.point}} </td>\r\n          </ng-container>\r\n      \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" style=\"height: 2vh;\"></tr>\r\n\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onSelect(row)\" [ngClass]=\"{'onSelect': selectedRowIndex == row.id}\"></tr>\r\n    </table>\r\n</div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  BuildingsClient,\r\n  AttackClient,\r\n  AttackableUsersDto,\r\n  ArmyClient,\r\n  ArmyDto,\r\n  ArmyUnitDto,\r\n  CityClient,\r\n  UnitDto,\r\n  ProfileClient,\r\n  RankDto,\r\n  GameClient,\r\n  AttackResponseDto,\r\n  AttackDto,\r\n  BuildingDto,\r\n  UpgradesClient,\r\n  UpgradeAttributeDto,\r\n  UpgradeTypeClient,\r\n  UpgradeDto,\r\n  BuildingTypeClient,\r\n} from 'src/app/shared';\r\nimport { BuildingModel } from '../buildings/model/building.model';\r\nimport { ArmyModel, ArmyUnitModel } from '../army/model/army.model';\r\nimport { PROFILE, ProfileModel } from '../pages/main/model/profile.model';\r\nimport { threadId } from 'worker_threads';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeatureService {\r\n  army: ArmyDto;\r\n  unitToSend: ArmyUnitDto;\r\n  attack: AttackDto;\r\n  upgradeDto: UpgradeDto;\r\n  units: ArmyUnitDto[];\r\n\r\n  constructor(\r\n    private buildingsClient: BuildingsClient,\r\n    private attackClient: AttackClient,\r\n    private armyClient: ArmyClient,\r\n    private cityClient: CityClient,\r\n    private profileClient: ProfileClient,\r\n    private gameClient: GameClient,\r\n    private upgradeType: UpgradeTypeClient,\r\n    private upgradeClient: UpgradesClient,\r\n    private buildingTypeClient: BuildingTypeClient\r\n  ) { }\r\n\r\n  getBuildings(): Observable<BuildingDto[]> {\r\n    return this.buildingsClient.getBuilding();\r\n    // return of(BUIDLDINGS);\r\n  }\r\n\r\n  getBuildingTypes(): Observable<any>{\r\n    return this.buildingTypeClient.getBuildings();\r\n  }\r\n  getDevelopments(): Observable<UpgradeAttributeDto[]> {\r\n    return this.upgradeType.getUpgrades();\r\n    // return of(DEVELOPMENTS);\r\n  }\r\n  getUpgradesinfos(): Observable<any> {\r\n    return this.upgradeClient.getCurrentUpgradeStatuses();\r\n  }\r\n  startUpgrades(upgradeType: number): Observable<any> {\r\n    console.log(upgradeType);\r\n    return this.upgradeClient.purchaseUpgrade(upgradeType);\r\n  }\r\n\r\n  getAttack(): Observable<AttackableUsersDto[]> {\r\n    // return of(mock);\r\n\r\n    return this.attackClient.getAttackableUsers();\r\n  }\r\n\r\n  sendAttack(id: string, units: ArmyUnitModel[]): Observable<any> {\r\n    this.attack = new AttackDto();\r\n    this.attack.defenderCityId = id;\r\n    this.attack.units = units.map((x): ArmyUnitDto => new ArmyUnitDto({...x}));\r\n    return this.attackClient.startAttack(this.attack);\r\n  }\r\n\r\n  getRanks(): Observable<RankDto[]> {\r\n    return this.profileClient.getRanks();\r\n  }\r\n\r\n\r\n  getFights(): Observable<AttackResponseDto[]> {\r\n    return this.attackClient.getAllAttacks();\r\n  }\r\n\r\n  getArmy(): Observable<UnitDto[]> {\r\n    return this.armyClient.getArmy();\r\n\r\n  }\r\n\r\n  purchaseUnits(units: ArmyUnitModel[]) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    this.units =  units.map((x): ArmyUnitDto => new ArmyUnitDto({...x}));\r\n    return this.armyClient.purchaseUnits(this.units);\r\n  }\r\n\r\n  getCityArmy(): Observable<any> {\r\n    return this.armyClient.getArmy();\r\n  }\r\n\r\n  getProfile(): Observable<any> {\r\n    return this.profileClient.getProfile();\r\n    // return of(PROFILE);\r\n  }\r\n\r\n  getCity(): Observable<any> {\r\n    return this.cityClient.getCity();\r\n  }\r\n\r\n  endTurn(): Observable<any> {\r\n    return this.gameClient.nextTurn();\r\n  }\r\n\r\n  getTurn(): Observable<number> {\r\n    return this.gameClient.getGameState();\r\n  }\r\n\r\n  purchaseBuildings(buildingType: number){\r\n\r\n    return this.buildingsClient.purchaseBuilding(buildingType);\r\n  }\r\n\r\n\r\n\r\n}\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n\r\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\n\r\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\r\n\r\n@Injectable()\r\nexport class ArmyClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    getArmy(): Observable<UnitDto[]> {\r\n        let url_ = this.baseUrl + \"/api/Army\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetArmy(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetArmy(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UnitDto[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UnitDto[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetArmy(response: HttpResponseBase): Observable<UnitDto[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(UnitDto.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UnitDto[]>(<any>null);\r\n    }\r\n\r\n    purchaseUnits(purchase: ArmyUnitDto[]): Observable<FileResponse | null> {\r\n        let url_ = this.baseUrl + \"/api/Army\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(purchase);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/octet-stream\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processPurchaseUnits(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processPurchaseUnits(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<FileResponse | null>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<FileResponse | null>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processPurchaseUnits(response: HttpResponseBase): Observable<FileResponse | null> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200 || status === 206) {\r\n            const contentDisposition = response.headers ? response.headers.get(\"content-disposition\") : undefined;\r\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\r\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\r\n            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<FileResponse | null>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class AttackClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    startAttack(attack: AttackDto): Observable<FileResponse | null> {\r\n        let url_ = this.baseUrl + \"/api/Attack\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(attack);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/octet-stream\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processStartAttack(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processStartAttack(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<FileResponse | null>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<FileResponse | null>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processStartAttack(response: HttpResponseBase): Observable<FileResponse | null> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200 || status === 206) {\r\n            const contentDisposition = response.headers ? response.headers.get(\"content-disposition\") : undefined;\r\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\r\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\r\n            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<FileResponse | null>(<any>null);\r\n    }\r\n\r\n    getAttackableUsers(): Observable<AttackableUsersDto[]> {\r\n        let url_ = this.baseUrl + \"/api/Attack\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetAttackableUsers(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetAttackableUsers(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<AttackableUsersDto[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<AttackableUsersDto[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetAttackableUsers(response: HttpResponseBase): Observable<AttackableUsersDto[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(AttackableUsersDto.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<AttackableUsersDto[]>(<any>null);\r\n    }\r\n\r\n    getAllAttacks(): Observable<AttackResponseDto[]> {\r\n        let url_ = this.baseUrl + \"/api/Attack/all\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetAllAttacks(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetAllAttacks(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<AttackResponseDto[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<AttackResponseDto[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetAllAttacks(response: HttpResponseBase): Observable<AttackResponseDto[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(AttackResponseDto.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<AttackResponseDto[]>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class AuthClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    authenticateUser(login: LoginDto): Observable<AuthResponseDto> {\r\n        let url_ = this.baseUrl + \"/api/Auth/login\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(login);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processAuthenticateUser(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processAuthenticateUser(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<AuthResponseDto>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<AuthResponseDto>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processAuthenticateUser(response: HttpResponseBase): Observable<AuthResponseDto> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = AuthResponseDto.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<AuthResponseDto>(<any>null);\r\n    }\r\n\r\n    registerUser(registration: RegisterDto): Observable<AuthResponseDto> {\r\n        let url_ = this.baseUrl + \"/api/Auth/register\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(registration);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processRegisterUser(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processRegisterUser(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<AuthResponseDto>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<AuthResponseDto>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processRegisterUser(response: HttpResponseBase): Observable<AuthResponseDto> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = AuthResponseDto.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<AuthResponseDto>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class BuildingsClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    getBuilding(): Observable<BuildingDto[]> {\r\n        let url_ = this.baseUrl + \"/api/Buildings\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetBuilding(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetBuilding(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<BuildingDto[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<BuildingDto[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetBuilding(response: HttpResponseBase): Observable<BuildingDto[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(BuildingDto.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<BuildingDto[]>(<any>null);\r\n    }\r\n\r\n    purchaseBuilding(buildingType: BuildingType | undefined): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/Buildings?\";\r\n        if (buildingType === null)\r\n            throw new Error(\"The parameter 'buildingType' cannot be null.\");\r\n        else if (buildingType !== undefined)\r\n            url_ += \"buildingType=\" + encodeURIComponent(\"\" + buildingType) + \"&\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processPurchaseBuilding(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processPurchaseBuilding(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processPurchaseBuilding(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class BuildingTypeClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    getBuildings(): Observable<BuildingAttributeDto[]> {\r\n        let url_ = this.baseUrl + \"/api/BuildingType\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetBuildings(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetBuildings(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<BuildingAttributeDto[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<BuildingAttributeDto[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetBuildings(response: HttpResponseBase): Observable<BuildingAttributeDto[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(BuildingAttributeDto.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<BuildingAttributeDto[]>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class CityClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    getCity(): Observable<CityDto> {\r\n        let url_ = this.baseUrl + \"/api/City\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetCity(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetCity(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<CityDto>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<CityDto>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetCity(response: HttpResponseBase): Observable<CityDto> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = CityDto.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<CityDto>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class GameClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    getGameState(): Observable<number> {\r\n        let url_ = this.baseUrl + \"/api/Game\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetGameState(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetGameState(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<number>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<number>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetGameState(response: HttpResponseBase): Observable<number> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<number>(<any>null);\r\n    }\r\n\r\n    nextTurn(): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/Game\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processNextTurn(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processNextTurn(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processNextTurn(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class ProfileClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    deleteProfile(id: string): Observable<FileResponse | null> {\r\n        let url_ = this.baseUrl + \"/api/Profile/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/octet-stream\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processDeleteProfile(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processDeleteProfile(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<FileResponse | null>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<FileResponse | null>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processDeleteProfile(response: HttpResponseBase): Observable<FileResponse | null> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200 || status === 206) {\r\n            const contentDisposition = response.headers ? response.headers.get(\"content-disposition\") : undefined;\r\n            const fileNameMatch = contentDisposition ? /filename=\"?([^\"]*?)\"?(;|$)/g.exec(contentDisposition) : undefined;\r\n            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;\r\n            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<FileResponse | null>(<any>null);\r\n    }\r\n\r\n    getRanks(): Observable<RankDto[]> {\r\n        let url_ = this.baseUrl + \"/api/Profile/ranks\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetRanks(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetRanks(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<RankDto[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<RankDto[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetRanks(response: HttpResponseBase): Observable<RankDto[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(RankDto.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<RankDto[]>(<any>null);\r\n    }\r\n\r\n    getProfile(): Observable<RankDto> {\r\n        let url_ = this.baseUrl + \"/api/Profile\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetProfile(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetProfile(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<RankDto>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<RankDto>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetProfile(response: HttpResponseBase): Observable<RankDto> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = RankDto.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<RankDto>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class UpgradesClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    getCurrentUpgradeStatuses(): Observable<UpgradeDto[]> {\r\n        let url_ = this.baseUrl + \"/api/Upgrades\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetCurrentUpgradeStatuses(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetCurrentUpgradeStatuses(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UpgradeDto[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UpgradeDto[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetCurrentUpgradeStatuses(response: HttpResponseBase): Observable<UpgradeDto[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(UpgradeDto.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UpgradeDto[]>(<any>null);\r\n    }\r\n\r\n    purchaseUpgrade(upgradeType: UpgradeType | undefined): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/Upgrades?\";\r\n        if (upgradeType === null)\r\n            throw new Error(\"The parameter 'upgradeType' cannot be null.\");\r\n        else if (upgradeType !== undefined)\r\n            url_ += \"upgradeType=\" + encodeURIComponent(\"\" + upgradeType) + \"&\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processPurchaseUpgrade(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processPurchaseUpgrade(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processPurchaseUpgrade(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class UpgradeTypeClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"\";\r\n    }\r\n\r\n    getUpgrades(): Observable<UpgradeAttributeDto[]> {\r\n        let url_ = this.baseUrl + \"/api/UpgradeType\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetUpgrades(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetUpgrades(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UpgradeAttributeDto[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UpgradeAttributeDto[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetUpgrades(response: HttpResponseBase): Observable<UpgradeAttributeDto[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(UpgradeAttributeDto.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UpgradeAttributeDto[]>(<any>null);\r\n    }\r\n}\r\n\r\nexport class UnitDto implements IUnitDto {\r\n    price!: number;\r\n    foodNecessity!: number;\r\n    damage!: number;\r\n    defense!: number;\r\n    unitType!: UnitType;\r\n    name?: string | undefined;\r\n\r\n    constructor(data?: IUnitDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.price = _data[\"price\"];\r\n            this.foodNecessity = _data[\"foodNecessity\"];\r\n            this.damage = _data[\"damage\"];\r\n            this.defense = _data[\"defense\"];\r\n            this.unitType = _data[\"unitType\"];\r\n            this.name = _data[\"name\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UnitDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UnitDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"price\"] = this.price;\r\n        data[\"foodNecessity\"] = this.foodNecessity;\r\n        data[\"damage\"] = this.damage;\r\n        data[\"defense\"] = this.defense;\r\n        data[\"unitType\"] = this.unitType;\r\n        data[\"name\"] = this.name;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUnitDto {\r\n    price: number;\r\n    foodNecessity: number;\r\n    damage: number;\r\n    defense: number;\r\n    unitType: UnitType;\r\n    name?: string | undefined;\r\n}\r\n\r\nexport enum UnitType {\r\n    Lezercapa = 0,\r\n    Rohamfoka = 1,\r\n    Csatacsiko = 2,\r\n    Hadvezer = 3,\r\n    Felfedezo = 4,\r\n}\r\n\r\nexport class ArmyUnitDto implements IArmyUnitDto {\r\n    unitType!: UnitType;\r\n    unitCount!: number;\r\n\r\n    constructor(data?: IArmyUnitDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.unitType = _data[\"unitType\"];\r\n            this.unitCount = _data[\"unitCount\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ArmyUnitDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ArmyUnitDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"unitType\"] = this.unitType;\r\n        data[\"unitCount\"] = this.unitCount;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IArmyUnitDto {\r\n    unitType: UnitType;\r\n    unitCount: number;\r\n}\r\n\r\nexport class AttackDto implements IAttackDto {\r\n    defenderCityId!: string;\r\n    units?: ArmyUnitDto[] | undefined;\r\n\r\n    constructor(data?: IAttackDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.defenderCityId = _data[\"defenderCityId\"];\r\n            if (Array.isArray(_data[\"units\"])) {\r\n                this.units = [] as any;\r\n                for (let item of _data[\"units\"])\r\n                    this.units!.push(ArmyUnitDto.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AttackDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AttackDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"defenderCityId\"] = this.defenderCityId;\r\n        if (Array.isArray(this.units)) {\r\n            data[\"units\"] = [];\r\n            for (let item of this.units)\r\n                data[\"units\"].push(item.toJSON());\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAttackDto {\r\n    defenderCityId: string;\r\n    units?: ArmyUnitDto[] | undefined;\r\n}\r\n\r\nexport class AttackableUsersDto implements IAttackableUsersDto {\r\n    id!: string;\r\n    username!: string;\r\n\r\n    constructor(data?: IAttackableUsersDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.username = _data[\"username\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AttackableUsersDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AttackableUsersDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"username\"] = this.username;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAttackableUsersDto {\r\n    id: string;\r\n    username: string;\r\n}\r\n\r\nexport class AttackResponseDto implements IAttackResponseDto {\r\n    cityName?: string | undefined;\r\n    unitList?: ArmyDto | undefined;\r\n\r\n    constructor(data?: IAttackResponseDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.cityName = _data[\"cityName\"];\r\n            this.unitList = _data[\"unitList\"] ? ArmyDto.fromJS(_data[\"unitList\"]) : <any>undefined;\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AttackResponseDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AttackResponseDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"cityName\"] = this.cityName;\r\n        data[\"unitList\"] = this.unitList ? this.unitList.toJSON() : <any>undefined;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAttackResponseDto {\r\n    cityName?: string | undefined;\r\n    unitList?: ArmyDto | undefined;\r\n}\r\n\r\nexport class ArmyDto implements IArmyDto {\r\n    unitList?: ArmyUnitDto[] | undefined;\r\n    armyFoodNecessity!: number;\r\n    armyPearlNecessity!: number;\r\n\r\n    constructor(data?: IArmyDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            if (Array.isArray(_data[\"unitList\"])) {\r\n                this.unitList = [] as any;\r\n                for (let item of _data[\"unitList\"])\r\n                    this.unitList!.push(ArmyUnitDto.fromJS(item));\r\n            }\r\n            this.armyFoodNecessity = _data[\"armyFoodNecessity\"];\r\n            this.armyPearlNecessity = _data[\"armyPearlNecessity\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ArmyDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ArmyDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        if (Array.isArray(this.unitList)) {\r\n            data[\"unitList\"] = [];\r\n            for (let item of this.unitList)\r\n                data[\"unitList\"].push(item.toJSON());\r\n        }\r\n        data[\"armyFoodNecessity\"] = this.armyFoodNecessity;\r\n        data[\"armyPearlNecessity\"] = this.armyPearlNecessity;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IArmyDto {\r\n    unitList?: ArmyUnitDto[] | undefined;\r\n    armyFoodNecessity: number;\r\n    armyPearlNecessity: number;\r\n}\r\n\r\nexport class AuthResponseDto implements IAuthResponseDto {\r\n    token?: string | undefined;\r\n\r\n    constructor(data?: IAuthResponseDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.token = _data[\"token\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AuthResponseDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AuthResponseDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"token\"] = this.token;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAuthResponseDto {\r\n    token?: string | undefined;\r\n}\r\n\r\nexport class LoginDto implements ILoginDto {\r\n    username!: string;\r\n    password!: string;\r\n\r\n    constructor(data?: ILoginDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.username = _data[\"username\"];\r\n            this.password = _data[\"password\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): LoginDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new LoginDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"username\"] = this.username;\r\n        data[\"password\"] = this.password;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ILoginDto {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport class RegisterDto implements IRegisterDto {\r\n    username!: string;\r\n    password!: string;\r\n    city!: string;\r\n\r\n    constructor(data?: IRegisterDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.username = _data[\"username\"];\r\n            this.password = _data[\"password\"];\r\n            this.city = _data[\"city\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): RegisterDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new RegisterDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"username\"] = this.username;\r\n        data[\"password\"] = this.password;\r\n        data[\"city\"] = this.city;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IRegisterDto {\r\n    username: string;\r\n    password: string;\r\n    city: string;\r\n}\r\n\r\nexport class BuildingDto implements IBuildingDto {\r\n    status!: Status;\r\n    price!: number;\r\n    turnCount!: number;\r\n    buildingType!: BuildingType;\r\n    quantity!: number;\r\n    currentTurn!: number;\r\n\r\n    constructor(data?: IBuildingDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.status = _data[\"status\"];\r\n            this.price = _data[\"price\"];\r\n            this.turnCount = _data[\"turnCount\"];\r\n            this.buildingType = _data[\"buildingType\"];\r\n            this.quantity = _data[\"quantity\"];\r\n            this.currentTurn = _data[\"currentTurn\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): BuildingDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new BuildingDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"status\"] = this.status;\r\n        data[\"price\"] = this.price;\r\n        data[\"turnCount\"] = this.turnCount;\r\n        data[\"buildingType\"] = this.buildingType;\r\n        data[\"quantity\"] = this.quantity;\r\n        data[\"currentTurn\"] = this.currentTurn;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IBuildingDto {\r\n    status: Status;\r\n    price: number;\r\n    turnCount: number;\r\n    buildingType: BuildingType;\r\n    quantity: number;\r\n    currentTurn: number;\r\n}\r\n\r\nexport enum Status {\r\n    UnBuilt = 0,\r\n    InProgress = 1,\r\n    Done = 2,\r\n}\r\n\r\nexport enum BuildingType {\r\n    Aramlasiranyito = 0,\r\n    Zatonyvar = 1,\r\n}\r\n\r\nexport class BuildingAttributeDto implements IBuildingAttributeDto {\r\n    buildingType!: BuildingType;\r\n    price!: number;\r\n    resident!: number;\r\n    coral!: number;\r\n    hostCapacity!: number;\r\n    name?: string | undefined;\r\n\r\n    constructor(data?: IBuildingAttributeDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.buildingType = _data[\"buildingType\"];\r\n            this.price = _data[\"price\"];\r\n            this.resident = _data[\"resident\"];\r\n            this.coral = _data[\"coral\"];\r\n            this.hostCapacity = _data[\"hostCapacity\"];\r\n            this.name = _data[\"name\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): BuildingAttributeDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new BuildingAttributeDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"buildingType\"] = this.buildingType;\r\n        data[\"price\"] = this.price;\r\n        data[\"resident\"] = this.resident;\r\n        data[\"coral\"] = this.coral;\r\n        data[\"hostCapacity\"] = this.hostCapacity;\r\n        data[\"name\"] = this.name;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IBuildingAttributeDto {\r\n    buildingType: BuildingType;\r\n    price: number;\r\n    resident: number;\r\n    coral: number;\r\n    hostCapacity: number;\r\n    name?: string | undefined;\r\n}\r\n\r\nexport class CityDto implements ICityDto {\r\n    id!: string;\r\n    pearlCount!: number;\r\n    pearlProduction!: number;\r\n    coralCount!: number;\r\n    coralProduction!: number;\r\n    buildings?: BuildingDto[] | undefined;\r\n    upgrades?: UpgradeDto[] | undefined;\r\n    availableArmy?: ArmyDto | undefined;\r\n    allArmy?: ArmyDto | undefined;\r\n    servicePay!: number;\r\n\r\n    constructor(data?: ICityDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.pearlCount = _data[\"pearlCount\"];\r\n            this.pearlProduction = _data[\"pearlProduction\"];\r\n            this.coralCount = _data[\"coralCount\"];\r\n            this.coralProduction = _data[\"coralProduction\"];\r\n            if (Array.isArray(_data[\"buildings\"])) {\r\n                this.buildings = [] as any;\r\n                for (let item of _data[\"buildings\"])\r\n                    this.buildings!.push(BuildingDto.fromJS(item));\r\n            }\r\n            if (Array.isArray(_data[\"upgrades\"])) {\r\n                this.upgrades = [] as any;\r\n                for (let item of _data[\"upgrades\"])\r\n                    this.upgrades!.push(UpgradeDto.fromJS(item));\r\n            }\r\n            this.availableArmy = _data[\"availableArmy\"] ? ArmyDto.fromJS(_data[\"availableArmy\"]) : <any>undefined;\r\n            this.allArmy = _data[\"allArmy\"] ? ArmyDto.fromJS(_data[\"allArmy\"]) : <any>undefined;\r\n            this.servicePay = _data[\"servicePay\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): CityDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new CityDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"pearlCount\"] = this.pearlCount;\r\n        data[\"pearlProduction\"] = this.pearlProduction;\r\n        data[\"coralCount\"] = this.coralCount;\r\n        data[\"coralProduction\"] = this.coralProduction;\r\n        if (Array.isArray(this.buildings)) {\r\n            data[\"buildings\"] = [];\r\n            for (let item of this.buildings)\r\n                data[\"buildings\"].push(item.toJSON());\r\n        }\r\n        if (Array.isArray(this.upgrades)) {\r\n            data[\"upgrades\"] = [];\r\n            for (let item of this.upgrades)\r\n                data[\"upgrades\"].push(item.toJSON());\r\n        }\r\n        data[\"availableArmy\"] = this.availableArmy ? this.availableArmy.toJSON() : <any>undefined;\r\n        data[\"allArmy\"] = this.allArmy ? this.allArmy.toJSON() : <any>undefined;\r\n        data[\"servicePay\"] = this.servicePay;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ICityDto {\r\n    id: string;\r\n    pearlCount: number;\r\n    pearlProduction: number;\r\n    coralCount: number;\r\n    coralProduction: number;\r\n    buildings?: BuildingDto[] | undefined;\r\n    upgrades?: UpgradeDto[] | undefined;\r\n    availableArmy?: ArmyDto | undefined;\r\n    allArmy?: ArmyDto | undefined;\r\n    servicePay: number;\r\n}\r\n\r\nexport class UpgradeDto implements IUpgradeDto {\r\n    upgradeType!: UpgradeType;\r\n    currentTurn!: number;\r\n    status!: Status;\r\n\r\n    constructor(data?: IUpgradeDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.upgradeType = _data[\"upgradeType\"];\r\n            this.currentTurn = _data[\"currentTurn\"];\r\n            this.status = _data[\"status\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UpgradeDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UpgradeDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"upgradeType\"] = this.upgradeType;\r\n        data[\"currentTurn\"] = this.currentTurn;\r\n        data[\"status\"] = this.status;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUpgradeDto {\r\n    upgradeType: UpgradeType;\r\n    currentTurn: number;\r\n    status: Status;\r\n}\r\n\r\nexport enum UpgradeType {\r\n    Iszaptraktor = 0,\r\n    Iszapkombajn = 1,\r\n    Korallfal = 2,\r\n    Szonaragyu = 3,\r\n    VizalattiHarcmuveszetek = 4,\r\n    Alkimia = 5,\r\n}\r\n\r\nexport class RankDto implements IRankDto {\r\n    userId!: string;\r\n    username?: string | undefined;\r\n    point!: number;\r\n    cityName?: string | undefined;\r\n    rank!: number;\r\n\r\n    constructor(data?: IRankDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.userId = _data[\"userId\"];\r\n            this.username = _data[\"username\"];\r\n            this.point = _data[\"point\"];\r\n            this.cityName = _data[\"cityName\"];\r\n            this.rank = _data[\"rank\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): RankDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new RankDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"userId\"] = this.userId;\r\n        data[\"username\"] = this.username;\r\n        data[\"point\"] = this.point;\r\n        data[\"cityName\"] = this.cityName;\r\n        data[\"rank\"] = this.rank;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IRankDto {\r\n    userId: string;\r\n    username?: string | undefined;\r\n    point: number;\r\n    cityName?: string | undefined;\r\n    rank: number;\r\n}\r\n\r\nexport class UpgradeAttributeDto implements IUpgradeAttributeDto {\r\n    upgradeType!: UpgradeType;\r\n    coralProduction!: number;\r\n    defensePoints!: number;\r\n    attackPoints!: number;\r\n    taxIncrease!: number;\r\n    name?: string | undefined;\r\n\r\n    constructor(data?: IUpgradeAttributeDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.upgradeType = _data[\"upgradeType\"];\r\n            this.coralProduction = _data[\"coralProduction\"];\r\n            this.defensePoints = _data[\"defensePoints\"];\r\n            this.attackPoints = _data[\"attackPoints\"];\r\n            this.taxIncrease = _data[\"taxIncrease\"];\r\n            this.name = _data[\"name\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UpgradeAttributeDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UpgradeAttributeDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"upgradeType\"] = this.upgradeType;\r\n        data[\"coralProduction\"] = this.coralProduction;\r\n        data[\"defensePoints\"] = this.defensePoints;\r\n        data[\"attackPoints\"] = this.attackPoints;\r\n        data[\"taxIncrease\"] = this.taxIncrease;\r\n        data[\"name\"] = this.name;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUpgradeAttributeDto {\r\n    upgradeType: UpgradeType;\r\n    coralProduction: number;\r\n    defensePoints: number;\r\n    attackPoints: number;\r\n    taxIncrease: number;\r\n    name?: string | undefined;\r\n}\r\n\r\nexport interface FileResponse {\r\n    data: Blob;\r\n    status: number;\r\n    fileName?: string;\r\n    headers?: { [name: string]: any };\r\n}\r\n\r\nexport class ApiException extends Error {\r\n    message: string;\r\n    status: number;\r\n    response: string;\r\n    headers: { [key: string]: any; };\r\n    result: any;\r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isApiException = true;\r\n\r\n    static isApiException(obj: any): obj is ApiException {\r\n        return obj.isApiException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n    if (result !== null && result !== undefined)\r\n        return _observableThrow(result);\r\n    else\r\n        return _observableThrow(new ApiException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next(\"\");\r\n            observer.complete();\r\n        } else {\r\n            let reader = new FileReader();\r\n            reader.onload = event => {\r\n                observer.next((<any>event.target).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob);\r\n        }\r\n    });\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { AuthClient, ProfileClient, BuildingsClient, AttackableUsersDto, AttackClient } from '.';\r\nimport { HttpClient, HttpHandler } from '@angular/common/http';\r\nimport { AuthGuardService } from '../features/pages/auth/service/auth-guard.service';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatSnackBarModule,\r\n    MatSliderModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatSortModule\r\n  ],\r\n  exports: [\r\n    MatDialogModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatGridListModule,\r\n    MatDividerModule,\r\n    MatSliderModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatSortModule\r\n  ],\r\n  providers: [\r\n    AuthClient,\r\n    AuthGuardService,\r\n    ProfileClient,\r\n    BuildingsClient,\r\n    AttackClient\r\n  ]\r\n\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n      ApiBaseUrl: 'http://localhost:5000'\r\n    // ApiBaseUrl: 'http://underseateam1.webtest.encosoft.internal'\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}